// Code generated by mockery v2.53.2. DO NOT EDIT.

package mockery

import mock "github.com/stretchr/testify/mock"

// MockSampleDesigner_designer is an autogenerated mock type for the SampleDesigner type
type MockSampleDesigner_designer struct {
	mock.Mock
}

type MockSampleDesigner_designer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSampleDesigner_designer) EXPECT() *MockSampleDesigner_designer_Expecter {
	return &MockSampleDesigner_designer_Expecter{mock: &_m.Mock}
}

// Do provides a mock function with no fields
func (_m *MockSampleDesigner_designer) Do() {
	_m.Called()
}

// MockSampleDesigner_designer_Do_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Do'
type MockSampleDesigner_designer_Do_Call struct {
	*mock.Call
}

// Do is a helper method to define mock.On call
func (_e *MockSampleDesigner_designer_Expecter) Do() *MockSampleDesigner_designer_Do_Call {
	return &MockSampleDesigner_designer_Do_Call{Call: _e.mock.On("Do")}
}

func (_c *MockSampleDesigner_designer_Do_Call) Run(run func()) *MockSampleDesigner_designer_Do_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSampleDesigner_designer_Do_Call) Return() *MockSampleDesigner_designer_Do_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSampleDesigner_designer_Do_Call) RunAndReturn(run func()) *MockSampleDesigner_designer_Do_Call {
	_c.Run(run)
	return _c
}

// NewMockSampleDesigner_designer creates a new instance of MockSampleDesigner_designer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSampleDesigner_designer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSampleDesigner_designer {
	mock := &MockSampleDesigner_designer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
