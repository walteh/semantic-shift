// Code generated by json-schema-postprocess. DO NOT EDIT.

package testdata

// This file contains interface definitions and implementation methods for parent types

// Palette represents the parent type for Palette types
type Palette interface {
	isPalette()
	Type() PaletteType
}

// PaletteSlice is a slice of Palette interfaces
type PaletteSlice []Palette

// PaletteMap is a map of Palette interfaces
type PaletteMap map[string]Palette

// isPalette implements the Palette interface
func (me *CategoricalPalette) isPalette() {}

// Type returns the Palette type constant
func (me *CategoricalPalette) Type() PaletteType { return PaletteTypeCategorical }

// isPalette implements the Palette interface
func (me *DiscreteScalePalette) isPalette() {}

// Type returns the Palette type constant
func (me *DiscreteScalePalette) Type() PaletteType { return PaletteTypeDiscrete_scale }

// isPalette implements the Palette interface
func (me *ContinuousScalePalette) isPalette() {}

// Type returns the Palette type constant
func (me *ContinuousScalePalette) Type() PaletteType { return PaletteTypeContinuous_scale }

// isPalette implements the Palette interface
func (me *MatrixPalette) isPalette() {}

// Type returns the Palette type constant
func (me *MatrixPalette) Type() PaletteType { return PaletteTypeMatrix }

// PaletteType represents the type model type
type PaletteType string

// Constants for the different model types
const (
	PaletteTypeCategorical      PaletteType = "categorical"
	PaletteTypeDiscrete_scale   PaletteType = "discrete-scale"
	PaletteTypeContinuous_scale PaletteType = "continuous-scale"
	PaletteTypeMatrix           PaletteType = "matrix"
)

// Color represents the parent type for Color types
type Color interface {
	isColor()
	Model() ColorType
}

// ColorSlice is a slice of Color interfaces
type ColorSlice []Color

// ColorMap is a map of Color interfaces
type ColorMap map[string]Color

// isColor implements the Color interface
func (me *HSLValue) isColor() {}

// Model returns the Color type constant
func (me *HSLValue) Model() ColorType { return ColorTypeHsl }

// isColor implements the Color interface
func (me *HSVValue) isColor() {}

// Model returns the Color type constant
func (me *HSVValue) Model() ColorType { return ColorTypeHsv }

// isColor implements the Color interface
func (me *HSIValue) isColor() {}

// Model returns the Color type constant
func (me *HSIValue) Model() ColorType { return ColorTypeHsi }

// isColor implements the Color interface
func (me *RGBValue) isColor() {}

// Model returns the Color type constant
func (me *RGBValue) Model() ColorType { return ColorTypeRgb }

// isColor implements the Color interface
func (me *RGBAValue) isColor() {}

// Model returns the Color type constant
func (me *RGBAValue) Model() ColorType { return ColorTypeRgba }

// isColor implements the Color interface
func (me *LABValue) isColor() {}

// Model returns the Color type constant
func (me *LABValue) Model() ColorType { return ColorTypeLab }

// isColor implements the Color interface
func (me *CMYKValue) isColor() {}

// Model returns the Color type constant
func (me *CMYKValue) Model() ColorType { return ColorTypeCmyk }

// isColor implements the Color interface
func (me *HSLValue) isColor() {}

// Model returns the Color type constant
func (me *HSLValue) Model() ColorType { return ColorTypeHsl }

// isColor implements the Color interface
func (me *HSVValue) isColor() {}

// Model returns the Color type constant
func (me *HSVValue) Model() ColorType { return ColorTypeHsv }

// isColor implements the Color interface
func (me *HSIValue) isColor() {}

// Model returns the Color type constant
func (me *HSIValue) Model() ColorType { return ColorTypeHsi }

// isColor implements the Color interface
func (me *RGBValue) isColor() {}

// Model returns the Color type constant
func (me *RGBValue) Model() ColorType { return ColorTypeRgb }

// isColor implements the Color interface
func (me *RGBAValue) isColor() {}

// Model returns the Color type constant
func (me *RGBAValue) Model() ColorType { return ColorTypeRgba }

// isColor implements the Color interface
func (me *LABValue) isColor() {}

// Model returns the Color type constant
func (me *LABValue) Model() ColorType { return ColorTypeLab }

// isColor implements the Color interface
func (me *LCHValue) isColor() {}

// Model returns the Color type constant
func (me *LCHValue) Model() ColorType { return ColorTypeLch }

// isColor implements the Color interface
func (me *CMYKValue) isColor() {}

// Model returns the Color type constant
func (me *CMYKValue) Model() ColorType { return ColorTypeCmyk }

// ColorType represents the model model type
type ColorType string

// Constants for the different model types
const (
	ColorTypeHsi  ColorType = "hsi"
	ColorTypeRgb  ColorType = "rgb"
	ColorTypeLab  ColorType = "lab"
	ColorTypeHsl  ColorType = "hsl"
	ColorTypeHsv  ColorType = "hsv"
	ColorTypeRgba ColorType = "rgba"
	ColorTypeCmyk ColorType = "cmyk"
	ColorTypeLch  ColorType = "lch"
)
